{"version":3,"sources":["Images/logo.png","Images/user-icon.jpg","Components/SideDrawer/DrawerToggleButton.js","Components/Header.js","Components/Landing.js","Components/Products.js","Components/SideDrawer/sideDrawer.js","Components/Backdrop.js","Components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","drawerToggleButton","props","react_default","a","createElement","className","onClick","click","Header","DrawerToggleButton","drawerClickHandler","react_router_dom","to","src","Logo","alt","concat","company","Landing","Products","prodHeader","listServices","services","map","service","key","id","Row_default","Card_default","style","padding","Body","Title","serviceName","Text","description","Container_default","sideDrawer","drawerClasses","show","userIcon","title","name","surname","email","occupation","Backdrop","About","user","App","state","sideDrawerOpen","drawerToggleClickHandler","_this","setState","prevState","backdropClickHandler","backdrop","this","Components_Backdrop","Components_Header","loggedIn","react_router","path","exact","component","Components_Landing","Components_Products","SideDrawer_sideDrawer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ad2f7afe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ff9d3636.png\";","module.exports = __webpack_public_path__ + \"static/media/user-icon.af222410.jpg\";","import React from 'react';\r\nimport '../../App.css';\r\n\r\nconst drawerToggleButton = props => (\r\n    //menu button, divs used as lines on the button\r\n    <button className='toggle-button' onClick={props.click}>\r\n        <div className='toggle-button-line'/>\r\n        <div className='toggle-button-line'/>\r\n        <div className='toggle-button-line'/>\r\n    </button>\r\n);\r\n\r\n//export component to be used in other .js components\r\nexport default drawerToggleButton;","import React from 'react';\r\n//import logo from Images folder\r\nimport Logo from '../Images/logo.png';\r\n//import menu button\r\nimport DrawerToggleButton from './SideDrawer/DrawerToggleButton';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//display header\r\nfunction Header(props) {\r\n    return (\r\n        <header className='App-header'>\r\n            {/* nav area consists of menu button and menu label */}\r\n            <nav className='header-nav'>\r\n                <div>\r\n                    <DrawerToggleButton click={props.drawerClickHandler} />\r\n                </div>\r\n                <div className='menu-label'>Menu</div>\r\n            </nav>\r\n            <div>\r\n                {/* website logo which links to home page when clicked */}\r\n                <Link to='/'>\r\n                    <img className='App-logo' src={Logo} alt='logo is too shy' />\r\n                </Link>\r\n            </div>\r\n            {/* welcome message on header */}\r\n            <h1>{`Welcome to ${props.company}`}</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\n//export component to be used in other .js components\r\nexport default Header;","import React from 'react';\r\n\r\n//Function displays landing page informationnpm\r\nfunction Landing(props){\r\n    return (\r\n        <div className='App-Landing'>\r\n            {/* landing page consists of Overview header and short description of company */}\r\n            <h1>Overview</h1>\r\n            <h6>At {props.company} we believe in providing excellent service to our clients and thereby forging lasting relationships. It is our mantra to treat every client as our only client. Each client and each matter gets treated as such and we strive to deal with each matter as quickly and efficiently and comprehensively as possible.</h6>\r\n        </div>\r\n    );\r\n}\r\n\r\n//export component to be used in other .js components\r\nexport default Landing;","import React from 'react';\r\n// import '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\n//Function displays services in card format\r\nfunction Products(props) {\r\n  const prodHeader = <h1>Our Services</h1>;\r\n    const listServices = props.services.map((service) => //iterate through services array\r\n    <div key={service.id}>\r\n        <Row>\r\n          <Card style={{padding: '50px'}}>\r\n            <Card.Body>\r\n              <Card.Title>{service.serviceName}</Card.Title>\r\n              <Card.Text>\r\n                {service.description}\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Row>\r\n      </div>\r\n    );\r\n    //returns services cards in a container\r\n    return (\r\n      <Container className='container'>\r\n        {prodHeader}\r\n        {listServices}\r\n      </Container>\r\n    );\r\n  }\r\n\r\n//export component to be used in other .js components\r\nexport default Products;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport userIcon from '../../Images/user-icon.jpg';\r\nimport '../../App.css';\r\n\r\nconst sideDrawer = props => {\r\n    var drawerClasses = 'side-drawer'; //className for the nav tag\r\n    if (props.show) {\r\n        drawerClasses = 'side-drawer open'; //className of nav tag changes if props.show is true\r\n    }\r\n    return (\r\n            <div>\r\n                {/* nav tag consists of user info and links to various components */}\r\n                <nav className={drawerClasses} >\r\n                    <div className='user-info'>\r\n                        {/* user information consists of user profile picture, user name, email and occupation */}\r\n                        <img src={userIcon}  alt='user icon is a bit shy' />\r\n                        <h3>{props.title} {props.name} {props.surname}</h3>\r\n                        <p>{props.email}</p>\r\n                        <p>{props.occupation}</p>\r\n                    </div>\r\n                    <div className='user-info-line' />\r\n                    <ul>\r\n                        {/* landing, about and service component links in an un-ordered list */}\r\n                        {/* react router used to navigate through components */}\r\n                        <Link to='/'>\r\n                            <li onClick={props.click}>Home</li>\r\n                        </Link>\r\n                        <Link to='/about'>\r\n                            <li onClick={props.click}>About</li>\r\n                        </Link>\r\n                        <Link to='/services'>\r\n                            <li onClick={props.click}>Services</li>\r\n                        </Link>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n    );\r\n};\r\n\r\n//export component to be used in other .js components\r\nexport default sideDrawer;","import React from 'react';\r\nimport '../App.css'\r\n\r\nconst Backdrop = props => (\r\n    // backdrop appears when menu side drawer is open\r\n    <div className='backdrop' onClick={props.click}/>\r\n);\r\n\r\nexport default Backdrop;","import React from 'react';\r\n\r\nconst About = props => {\r\n    return (\r\n        <div className='About'>\r\n            {/* about page consists of about header and description of company (lorem placeholder) */}\r\n            <h1>About Us</h1>\r\n            <p>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n//export component to be used in other .js components\r\nexport default About;","import React, { Component } from 'react';\n//import css file\nimport './App.css';\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n//import app components\nimport Header from './Components/Header';\nimport Landing from './Components/Landing';\nimport Products from './Components/Products';\nimport SideDrawer from './Components/SideDrawer/sideDrawer';\nimport Backdrop from './Components/Backdrop';\nimport About from './Components/About';\n\n//logged in state, true if user is logged in, false if not\nvar loggedIn = true;\n//company name\nconst company = 'Doe Pearson Attorneys';\n\n//user information object\nvar user = {\n  //promt user to enter relevant info\n  title: 'Miss.', //prompt('Please enter your Title?'),\n  name: 'Jane', //prompt('Please enter your name.'),\n  surname: 'Doe', //prompt('Please enter your surname'),\n  occupation: 'Name Partner',\n  email: 'doe.jane@doepearson.com'\n};\n\n//company services array with service objects\nconst services = [{\n  id: '1',\n  serviceName: 'Corporate',\n  description: 'In response to the complex requirements of domestic and international transactions and the considerable areas of law involved, our firm amalgamates the knowledge, experience, and skills of the various disciplines necessary to successfully conclude transactions for our demanding corporate clientele. Doe and Partners is generally a full service corporate law firm, which means that we aim to offer a comprehensive range of services to our clients rather than focusing on just one specific area of law. A strong local presence plus the advantage of efficient global resources enable corporate clients to enjoy swift and successful solutions.'\n}, {\n  id: '2',\n  serviceName: 'Private',\n  description: `${company} servicing private clients is knowledgeable in providing high net worth individuals with professional advice on all aspects of family law, inheritance law, taxation, wealth planning and succession related matters. Clients are assisted globally through the comprehensive knowledge in international civil law, international estate planning, wealth management and dispute resolution offered. Regardless of whether the client is in a civil law or case law jurisdiction, due to the unique multidisciplinary approach of ${company} complex problems are able to be solved.`\n}, {\n  id: '3',\n  serviceName: 'Litigation & Dispute Resolution',\n  description: `As international business is by definition global, clients need to have access to experienced litigators all over the world. ${company} attorneys are proven professionals in national and international court cases and many of their litigators are recognized as leaders in their specific field. Legal disputes are common place and are usually unpleasant and expensive. The required solution can often be arrived at more effectively via the option of arbitration or mediation. Our attorneys are leaders in both. They assess their clients' prospects with draft solutions in preparation aimed directly at an alternative dispute resolution, but also, if found necessary, will represent their clients in the respective court or supreme courts.\n  `\n}, {\n  id: '4',\n  serviceName: 'Administrative & Government Affairs',\n  description: `Administrative Law is rapidly growing as a consequence of the increase in governmental functions. Markets and other complex forms of non-governmental administration generate enormous benefits, but also produce inefficiencies and failures, abuses of economic power and position, environmental degradation, safety hazards, economic insecurity, dependency, and other systemic ills. In response to the inadequacies of private and criminal law, legislatures have adopted extensive programs to prevent these ills. Corporate clients as well as some private clients require extensive advice and support for their national and international businesses from well-established GGI law firms who are at the forefront of the latest developments in Administrative Law and understand the necessity for precise assessment and meticulous preparation in all government related affairs, public procurement, government tenders or tenders put out by international organizations and entities`\n}];\n\n//component to render App\nclass App extends Component {\n  \n  //state of sideDrawer set to false to hide drawer. sideDrawer opens when true\n  state = {\n    sideDrawerOpen: false\n  };\n\n  //method to change state of sideDrawer when triggered\n  drawerToggleClickHandler = () => {\n    this.setState((prevState) => {\n      return { sideDrawerOpen: !prevState.sideDrawerOpen }\n    });\n  };\n\n  //method to display backdrop when state of sideDrawerOpen is true\n  backdropClickHandler = () => {\n    this.setState({ sideDrawerOpen: false });\n  };\n\n  render() {\n    var backdrop;\n\n    //runs when state of sideDrawerOpen is true\n    if (this.state.sideDrawerOpen) {\n      //variable backdrop is assigned the Backdrop component and the backdropClickHandler method is passed as a prop \n      backdrop = <Backdrop click={this.backdropClickHandler} />\n    }\n\n    return (\n      //Components are displayed with the Router functionality\n      <Router>\n        <div className='App'>\n          {/* runs code from components with relevant props*/}\n          <Header className='App-header' drawerClickHandler={this.drawerToggleClickHandler} title={user.title} name={user.name} surname={user.surname} loggedIn={loggedIn} company={company} />\n          <Switch> {/* To stop components display over each other, Switch from react-router-dom is used */}\n            {/* Route creates links so that components are displayed only when the specific uri is typed in */}\n            <Route path='/' exact component={() => <Landing company={company} />} /> {/* 'exact' is used the Landing page is displayed only when the uri is '/' */}\n            <Route path='/services' component={() => <Products services={services} />} />\n            <Route path='/about' component={About} />\n          </Switch>\n          {/* sideDrawer with relevant props, opens when state of sideDrawerOpen is true */}\n          <SideDrawer show={this.state.sideDrawerOpen} email={user.email} name={user.name} surname={user.surname} title={user.title} occupation={user.occupation} services={services} click={this.backdropClickHandler}/>\n          {/* backdrop displayed when backdropClickHandler is triggered */}\n          {backdrop}\n        </div>\n      </Router>\n    );\n  }\n}\n\n//export component to be used in other .js components\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}